// Generated by using Rcpp::compileAttributes() -> do not edit by hand
// Generator token: 10BE3573-1514-4C36-9D1C-5A225CD40393

#include <RcppArmadillo.h>
#include <Rcpp.h>

using namespace Rcpp;

#ifdef RCPP_USE_GLOBAL_ROSTREAM
Rcpp::Rostream<true>&  Rcpp::Rcout = Rcpp::Rcpp_cout_get();
Rcpp::Rostream<false>& Rcpp::Rcerr = Rcpp::Rcpp_cerr_get();
#endif

// log_mix_prior_derivative
double log_mix_prior_derivative(double b, double t1, double t2, double p);
RcppExport SEXP _multinomialLogitMix_log_mix_prior_derivative(SEXP bSEXP, SEXP t1SEXP, SEXP t2SEXP, SEXP pSEXP) {
BEGIN_RCPP
    Rcpp::RObject rcpp_result_gen;
    Rcpp::RNGScope rcpp_rngScope_gen;
    Rcpp::traits::input_parameter< double >::type b(bSEXP);
    Rcpp::traits::input_parameter< double >::type t1(t1SEXP);
    Rcpp::traits::input_parameter< double >::type t2(t2SEXP);
    Rcpp::traits::input_parameter< double >::type p(pSEXP);
    rcpp_result_gen = Rcpp::wrap(log_mix_prior_derivative(b, t1, t2, p));
    return rcpp_result_gen;
END_RCPP
}
// log_prior_mix
double log_prior_mix(double b, double t1, double t2, double p);
RcppExport SEXP _multinomialLogitMix_log_prior_mix(SEXP bSEXP, SEXP t1SEXP, SEXP t2SEXP, SEXP pSEXP) {
BEGIN_RCPP
    Rcpp::RObject rcpp_result_gen;
    Rcpp::RNGScope rcpp_rngScope_gen;
    Rcpp::traits::input_parameter< double >::type b(bSEXP);
    Rcpp::traits::input_parameter< double >::type t1(t1SEXP);
    Rcpp::traits::input_parameter< double >::type t2(t2SEXP);
    Rcpp::traits::input_parameter< double >::type p(pSEXP);
    rcpp_result_gen = Rcpp::wrap(log_prior_mix(b, t1, t2, p));
    return rcpp_result_gen;
END_RCPP
}
// mala_proposal_cpp
List mala_proposal_cpp(arma::mat y, arma::mat X, arma::cube b, IntegerVector z, double tau, arma::vec pr, double nu2);
RcppExport SEXP _multinomialLogitMix_mala_proposal_cpp(SEXP ySEXP, SEXP XSEXP, SEXP bSEXP, SEXP zSEXP, SEXP tauSEXP, SEXP prSEXP, SEXP nu2SEXP) {
BEGIN_RCPP
    Rcpp::RObject rcpp_result_gen;
    Rcpp::RNGScope rcpp_rngScope_gen;
    Rcpp::traits::input_parameter< arma::mat >::type y(ySEXP);
    Rcpp::traits::input_parameter< arma::mat >::type X(XSEXP);
    Rcpp::traits::input_parameter< arma::cube >::type b(bSEXP);
    Rcpp::traits::input_parameter< IntegerVector >::type z(zSEXP);
    Rcpp::traits::input_parameter< double >::type tau(tauSEXP);
    Rcpp::traits::input_parameter< arma::vec >::type pr(prSEXP);
    Rcpp::traits::input_parameter< double >::type nu2(nu2SEXP);
    rcpp_result_gen = Rcpp::wrap(mala_proposal_cpp(y, X, b, z, tau, pr, nu2));
    return rcpp_result_gen;
END_RCPP
}

static const R_CallMethodDef CallEntries[] = {
    {"_multinomialLogitMix_log_mix_prior_derivative", (DL_FUNC) &_multinomialLogitMix_log_mix_prior_derivative, 4},
    {"_multinomialLogitMix_log_prior_mix", (DL_FUNC) &_multinomialLogitMix_log_prior_mix, 4},
    {"_multinomialLogitMix_mala_proposal_cpp", (DL_FUNC) &_multinomialLogitMix_mala_proposal_cpp, 7},
    {NULL, NULL, 0}
};

RcppExport void R_init_multinomialLogitMix(DllInfo *dll) {
    R_registerRoutines(dll, NULL, CallEntries, NULL, NULL);
    R_useDynamicSymbols(dll, FALSE);
}
